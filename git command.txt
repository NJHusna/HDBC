🖥️ GIT COMMANDS CHEAT SHEET

# Set configuration values for your username and email
git config --global user.name YOUR NAME
git config --global user.email YOUR EMAIL


#Set default branch to main
git config --global init.default branch main

# Get help on a command
git help COMMAND --> e.g., git help config
git COMMAND -h --> e.g., git config -h

# change the directory 
cd directory --> e.g., C:\Users\njhus\Desktop\HDBC

# Initialize a new git repository
git init

Clone a repository
git clone REPOSITORY URL

# Add a file to the staging area (to track the file)
git add FILE

# Add all file changes to the staging area
git add --all
git add -A
git add .

# to unstage/untrack the file (remove the track file)
git rm --cached FILE NAME

# to unhide information from anyone see the file 
# or dont want to include as part of the project by git ignore the file
create a new file .gitignore (in text editor)
insert the extension --> *.txt

# Check the unstaged changes (to check the changes by comparing new n previous changes)
git diff

# Commit the staged changes
git commit -m "MESSAGE"

# to remove file from staging (move the file into working environment)
git restore --staged FILENAME

# to skip staging and commit from staging
git commit -a -m 'updated text from free change'

# to restore deleted file
git restore "FileName"

# Reset staging area to the last commit
git reset 

# Check the state of the working directory and the staging area
git status

# Remove a file from the index and working directory
git rm FILENAME

# Rename a file
git mv (OLD NAME) (NEW NAME)

# List the commit history 
git log
git log --oneline (to see in one line)

# list of commit history with changes details
git log -p

# documentation
git help log

# List all the local branches
git branch

# Create a new branch
git branch BRANCH NAME

Rename the current branch
git branch -m NEW BRANCH NAME

# Delete a branch
git branch -d BRANCH NAME

# Switch to another branch
git switch BRANCH NAME

# Merge specified branch into the current branch
git merge BRANCH NAME
git merge -m "message" NEW BRANCH NAME
git merge -a -m "message"

# Create a connection to a remote repository
git remote add (NAME) (REPOSITORY URL)

# set target branch
git branch -M main

# Push the committed changes to a remote directory (repos)
git push (REMOTE) (BRANCH) --> push only 1 branch

# to push all branch to github
git push -all

## 1st method to pull to local
#a) download all history traking remote branch
git fetch
#b)  merge changes to local 
git merge

#Download the content from a remote repository
git pull REMOTE